import pandas as pd
import numpy as np
from pymongo import MongoClient
from functools import reduce
from operator import add


class BillboardData(object):
    def __init__(self):
        df1 = pd.DataFrame(map(lambda r: [r['metadata']['artists'][0]['name'],
            r['metadata']['album']['id'],
            r['metadata']['album']['album_type'],
            r['metadata']['album']['total_tracks'],
            r['metadata']['album']['release_date'],
            r['metadata']['album']['release_date_precision'],
            r['metadata']['disc_number'],
            r['metadata']['duration_ms'],
            r['metadata']['explicit'],
            r['metadata']['id'],
            r['metadata']['name'],
            r['metadata']['popularity'],
            r['metadata']['track_number'],
            r['audio_features']['danceability'],
            r['audio_features']['energy'],
            r['audio_features']['acousticness'],
            r['audio_features']['key'],
            r['audio_features']['loudness'],
            r['audio_features']['mode'],
            r['audio_features']['speechiness'],
            r['audio_features']['instrumentalness'],
            r['audio_features']['liveness'],
            r['audio_features']['valence'],
            r['audio_features']['tempo'],
            r['audio_features']['time_signature'],
            r['_id']
           ], db.spotify.find()),
          columns=
           ['artist',
            'album_id',
            'album_type',
            'total_tracks',
            'release_date',
            'release_date_precision',
            'disc_number',
            'duration_ms',
            'explicit',
            'track_id',
            'title',
            'popularity',
            'track_number',
            'danceability',
            'energy',
            'acousticness',
            'key',
            'loudness',
            'mode',
            'speechiness',
            'instrumentalness',
            'liveness',
            'valence',
            'tempo',
            'time_signature',
            'obj_id'
           ])

           df2 = pd.DataFrame(map(lambda r: [r['metadata']['artists'][0]['name'],
                r['metadata']['album']['id'],
                r['metadata']['album']['album_type'],
                r['metadata']['album']['total_tracks'],
                r['metadata']['album']['release_date'],
                r['metadata']['album']['release_date_precision'],
                r['metadata']['disc_number'],
                r['metadata']['duration_ms'],
                r['metadata']['explicit'],
                r['metadata']['id'],
                r['metadata']['name'],
                r['metadata']['popularity'],
                r['metadata']['track_number'],
                r['audio_features']['danceability'],
                r['audio_features']['energy'],
                r['audio_features']['acousticness'],
                r['audio_features']['key'],
                r['audio_features']['loudness'],
                r['audio_features']['mode'],
                r['audio_features']['speechiness'],
                r['audio_features']['instrumentalness'],
                r['audio_features']['liveness'],
                r['audio_features']['valence'],
                r['audio_features']['tempo'],
                r['audio_features']['time_signature'],
                None
               ], db.spotify_nillboard.find()),
              columns=
               ['artist',
                'album_id',
                'album_type',
                'total_tracks',
                'release_date',
                'release_date_precision',
                'disc_number',
                'duration_ms',
                'explicit',
                'track_id',
                'title',
                'popularity',
                'track_number',
                'danceability',
                'energy',
                'acousticness',
                'key',
                'loudness',
                'mode',
                'speechiness',
                'instrumentalness',
                'liveness',
                'valence',
                'tempo',
                'time_signature',
                'obj_id'
               ])

               lyrics_df = pd.DataFrame(map(lambda r: [r['_id'],
                    r['response_artist'],
                    r['response_title'],
                    r['dict_sentiment']['pos'],
                    r['dict_sentiment']['neg'],
                    r['dict_sentiment']['wordcount']],
                db.lyrics.find()), columns=
                   ['track_id',
                    'response_artist',
                    'response_title',
                    'poscount',
                    'negcount',
                    'wordcount'
                   ])
lyrics_df.shape

